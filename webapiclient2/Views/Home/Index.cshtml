@model IEnumerable<webapiclient2.Models.Flights>

@{
    ViewData["Title"] = "Index";
    
}
<link rel="stylesheet" href="~/css/oneForAll.css">

<h1>Index</h1>

<p style="font-size: 18px; text-align: right;">
    Buy color definition : <span style="color:red;">the price is Higher than normal</span> - <span style="color:blue;">no change</span> - <span style="color:green;">the price is lower than normal</span>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                Flight n°
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Departure)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Destination)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Date)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Seats)
            </th>
            <th>
                Remaining Seats
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model)
{
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.FlightNo)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Departure)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Destination)
            </td>
            <td>
                @{
                    string date = "";
                    date = item.Date.ToString();
                    string date2 = date.Substring(0, 16);
                    ViewBag.dates = date2;
                }
                @ViewBag.dates
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Seats)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.RemainingSeats)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            @{
                string price = "equal";

                var days = (item.Date - DateTime.Now).TotalDays;

                if (item.RemainingSeats > (item.Seats * 50 / 100) && days < 30)
                {
                    price = "cheaper";
                }
                else
                {
                    if (item.RemainingSeats > (item.Seats * 80 / 100) && days < 60)
                    {
                        price = "cheaper";
                    }
                    else
                    {
                        if (item.RemainingSeats < (item.Seats * 20 / 100))
                        {
                            price = "higher";
                        }
                    }
                }
            }
            @if (price.Equals("higher"))
            {
        <td>
            @Html.ActionLink("Buy", "OneFlight", new { id = item.FlightNo }, new { @style = "color:red;" })
        </td>
            }
            @if (price.Equals("cheaper"))
            {
                <td>
                    @Html.ActionLink("Buy", "OneFlight", new { id = item.FlightNo }, new { @style = "color:green;" })
                </td>
            }
            @if (price.Equals("equal"))
            {
                <td>
                    @Html.ActionLink("Buy", "OneFlight", new { id = item.FlightNo })
                </td>
            }

        </tr>
}
       
    </tbody>
</table>
